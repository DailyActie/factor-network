/*!
 * factor-network.js v1.0.1
 * (c) 2017-09-16 Jade Gu
 * Released under the MIT License.
 * @license
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.FactorNetwork=n()}(this,function(){"use strict";function t(){return 2*Math.random()-1}function n(){return Math.random()<=.5}function r(t){return t}function e(t){return Math.max(0,t)}function o(t){return t<=0?0:1}function u(t){return 1/(1+Math.exp(-t/1))}function a(t){return t*(1-t)}function i(t){if(t===1/0)return 1;if(t===-1/0)return-1;var n=Math.exp(2*t);return(n-1)/(n+1)}function f(t){return 1-t*t}function c(n){for(var r=[],e=n[0],o=1;o<n.length;o++){for(var u=[],a=0;a<n[o];a++){for(var i=[],f=0;f<e;f++){var c=t();i.push(c)}u.push(i)}e=u.length,r.push(u)}return r}function v(t,n){for(var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"SIGMOID",e=n,o=[n.concat()],u=0;u<t.length;u++){for(var a=t[u],i=[],f=0;f<a.length;f++){for(var c=a[f],v=0,p=0;p<c.length;p++){var g=c[p];v+=e[p]*g}var s=h(r,u).output(v);i.push(s)}o.push(i),e=i}return o}function h(t,n){return"string"==typeof t?N[t]:Array.isArray(t)?N[t[n]]:void 0}function p(t,n){for(var r=0;r<t.length;r++)for(var e=t[r],o=0;o<e.length;o++)for(var u=e[o],a=0;a<u.length;a++){var i=u[a];n({weight:i,node:u,layer:e,network:t,path:[r,o,a]})}}function g(t){return JSON.parse(JSON.stringify(t))}function s(t,n){return JSON.stringify(t)===JSON.stringify(n)}function l(t){function n(){return h}function r(t){h=t}function e(t){return p=v(h,t,f.activation)}function o(t,n){var r=e(n);return f.output(r[r.length-1])}function u(t){for(var n=[],r=p[p.length-1],e=0;e<t.length;e++){var o=r[e]-t[e];n.push(o)}return m(h,n)}function a(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f.learningRate,r=u(t);d(h,p,r,f.activation,n)}function i(t,n){e(t),a(n)}var f=Object.assign({},M,t),h=c(f.network),p=null;return{options:f,getNetwork:n,replaceNetwork:r,compute:e,adjust:a,train:i,output:o}}function m(t,n){for(var r=[n.concat()],e=n,o=t.length-2;o>=0;o--){for(var u=t[o],a=t[o+1],i=[],f=u.length-1;f>=0;f--){for(var c=0,v=a.length-1;v>=0;v--){var h=a[v][f];c+=e[v]*h}i.unshift(c)}r.unshift(i),e=i}return r}function d(t,n,r,e,o){p(t,function(u){var a=u.path,i=t[a[0]][a[1]][a[2]],f=n[a[0]][a[2]],c=n[a[0]+1][a[1]],v=r[a[0]][a[1]],p=h(e,a[0]),g=-o*v*f*p.derivative(c),s=i+g;t[a[0]][a[1]][a[2]]=s})}function k(t){function n(t){for(var n=0;n<t;n++){var r=c(p.network);s.push(r)}p.amount=s.length}function r(t){s.forEach(t)}function e(t){var r=s.length;r>t?(s.length=t,p.amount=t):r<t&&n(t-r)}function o(){return s}function u(t){s=t}function a(t){for(var n=[],r=0;r<t.length;r++)n.push(s[t[r]]);s=n,p.amount=s.length}function i(t,n){return v(s[t],n,p.activation)}function f(t,n){var r=i(t,n);return p.output(r[r.length-1])}function h(t){t&&a(t);for(var n=[],r=Math.round(p.elitismRate*p.amount),e=0;e<r;e++)n.push(s[e]);for(var o=Math.round(p.randomRate*p.amount),u=0;u<o;u++)n.push(c(p.network));for(var i=0;;){for(var f=0;f<i;f++)for(var v=0;v<p.mixNumber;v++){var h=w(g(s[f]),s[i],p.mutation);if(n.push(h),n.length>=p.amount)return n.length=p.amount,void(s=n)}i++,i===s.length&&(i=0)}}var p=Object.assign({},y,t),s=[];return n(p.amount),{options:p,createNetworks:n,eachNetwork:r,getNetworks:o,replaceNetworks:u,sortNetworks:a,updateAmount:e,compute:i,adjust:h,output:f}}function w(r,e,o){return p(r,function(u){var a=u.path;if(n()){var i=e[a[0]][a[1]][a[2]];r[a[0]][a[1]][a[2]]=i}Math.random()<=o.rate&&(r[a[0]][a[1]][a[2]]+=o.range*t())}),r}var N={RELU:{output:e,derivative:o},SIGMOID:{output:u,derivative:a},TANH:{output:i,derivative:f}},M={network:[2,2,1],activation:"SIGMOID",learningRate:.1,output:r},y={network:[2,2,1],amount:50,elitismRate:.2,randomRate:.2,mixNumber:1,mutation:{rate:.1,range:.5},activation:"SIGMOID",output:r};return{network:Object.freeze({create:c,compute:v,getActivation:h,walk:p,copy:g,isEqual:s}),createBackPropagation:l,createEvolution:k}});